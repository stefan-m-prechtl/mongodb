/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package de.esg.mongodemo;

import static org.bson.codecs.configuration.CodecRegistries.fromProviders;
import static org.bson.codecs.configuration.CodecRegistries.fromRegistries;

import java.util.Optional;

import org.bson.codecs.configuration.CodecRegistry;
import org.bson.codecs.pojo.PojoCodecProvider;

import com.mongodb.MongoClientSettings;
import com.mongodb.client.MongoClient;
import com.mongodb.client.MongoClients;
import com.mongodb.client.MongoCollection;
import com.mongodb.client.MongoDatabase;

public class Library
{
	private final String host = "localhost";
	private final int port = 27017;

	private MongoClient mongoClient;

	public void connectToServer()
	{
		try
		{
			final CodecRegistry pojoCodecRegistry = fromRegistries(com.mongodb.MongoClient.getDefaultCodecRegistry(),
					fromProviders(PojoCodecProvider.builder().automatic(true).build()));

			final MongoClientSettings settings = MongoClientSettings.builder().codecRegistry(pojoCodecRegistry).build();
			this.mongoClient = MongoClients.create(settings);
		}
		catch (final Exception e)
		{
			e.printStackTrace();
		}
	}

	public void disconnectFromServer()
	{
		Optional.of(this.mongoClient).ifPresent(client -> client.close());
	}

	public MongoClient getClient()
	{
		return this.mongoClient;
	}

	public Project createProject()
	{
		this.connectToServer();

		final MongoDatabase database = this.mongoClient.getDatabase("projectDb");
		final MongoCollection<Project> collection = database.getCollection("projects", Project.class);

		final Project project = new Project();
		project.setName("Demo-Projekt");
		project.setKey("PROJ");
		final Version v1 = new Version(1, "neu", "Initialversion");
		project.setVersion(v1);

		collection.insertOne(project);

		final Project fromDb = collection.find().first();

		this.disconnectFromServer();

		return fromDb;

	}

}
